{"version":3,"sources":["../../src/util/VerifyCases.js"],"names":["types","VerifyCases","caseArray","cases","type","forEach","c","includes","Error","length","Array","isArray","verified"],"mappings":";;;;;;;;;AAAA,IAAMA,KAAK,GAAG,CACb,QADa,EAEb,QAFa,EAGb,SAHa,CAAd;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;AAElC,MAAIC,KAAJ,EAAWC,IAAX;;AACA,kBAAeF,SAAS,CAAC,CAAD,CAAxB;AACC,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,SAAL;AACC,UAAIA,SAAS,CAACG,OAAV,CAAkB,UAAAC,CAAC;AAAA,eAAIN,KAAK,CAACO,QAAN,SAAsBD,CAAtB,EAAJ;AAAA,OAAnB,CAAJ,EAAsD,MAAM,IAAIE,KAAJ,CAAU,oEAAV,CAAN;AACtDL,MAAAA,KAAK,GAAGD,SAAR;AACAE,MAAAA,IAAI,GAAG,OAAP;AACA;;AAED,SAAK,QAAL;AACC,UAAIF,SAAS,CAACO,MAAV,GAAmB,CAAvB,EAA0B,MAAM,IAAID,KAAJ,CAAU,sEAAV,CAAN;;AAC1B,UAAIE,KAAK,CAACC,OAAN,CAAcT,SAAS,CAAC,CAAD,CAAvB,CAAJ,EAAiC;AAChC,YAAIU,QAAQ,GAAGX,WAAW,CAACC,SAAS,CAAC,CAAD,CAAV,CAA1B;AACAC,QAAAA,KAAK,GAAGS,QAAQ,CAACT,KAAjB;AACAC,QAAAA,IAAI,GAAGQ,QAAQ,CAACR,IAAhB;AACA,OAJD,MAIO;AACND,QAAAA,KAAK,GAAGD,SAAS,CAAC,CAAD,CAAjB;AACAE,QAAAA,IAAI,GAAG,QAAP;AACA;;AACD;;AAED;AACC,YAAM,IAAII,KAAJ,CAAU,oEAAV,CAAN;AAtBF;;AAyBA,SAAO;AACNL,IAAAA,KAAK,EAALA,KADM;AAENC,IAAAA,IAAI,EAAJA;AAFM,GAAP;AAKA,CAjCD;;eAmCeH,W","sourcesContent":["const types = [\n\t'string',\n\t'number',\n\t'boolean'\n]\n\nconst VerifyCases = (caseArray) => {\n\n\tlet cases, type\n\tswitch (typeof caseArray[0]) {\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\tif (caseArray.forEach(c => types.includes(typeof c))) throw new Error('Enumer8 currently only supports string, number, and boolean values')\n\t\t\tcases = caseArray\n\t\t\ttype = 'array'\n\t\t\tbreak\n\n\t\tcase 'object':\n\t\t\tif (caseArray.length > 1) throw new Error('Individual values cannot be enumerated if an object/array is present')\n\t\t\tif (Array.isArray(caseArray[0])) {\n\t\t\t\tlet verified = VerifyCases(caseArray[0])\n\t\t\t\tcases = verified.cases\n\t\t\t\ttype = verified.type\n\t\t\t} else {\n\t\t\t\tcases = caseArray[0]\n\t\t\t\ttype = 'object'\n\t\t\t}\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tthrow new Error('Enumer8 currently only supports string, number, and boolean values')\n\t}\n\n\treturn {\n\t\tcases,\n\t\ttype\n\t}\n\n}\n\nexport default VerifyCases\n"],"file":"VerifyCases.js"}